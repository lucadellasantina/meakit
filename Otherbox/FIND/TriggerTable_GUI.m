function TriggerTable_GUI()
% table to set trigger values and store them proper
%
% kilias 08/09 
% This function belongs to FIND_GUI Toolbox project
% http://find.bccn.uni-freiburg.de

global nsFile; %-% if needed.

global BUTTON_HEIGHT;
global LABEL_HEIGHT;
global MESSAGEBAR_PANEL_HEIGHT;
global MESSAGEBAR_LEFT_OFFSET;
global MESSAGEBAR_RIGHT_OFFSET;

try
    
    if ishandle(findobj('tag', 'TiggerTable_GUI'))
        choice=questdlg('Do you want to store current table as event entities within the nsFile variable?');
        switch choice
            case 'yes'
            case 'no'
                
            case 'cancel'
        end
        close(findobj('tag', 'TiggerTable_GUI'));
    end;
    
    GUIxPos=20;
    GUIyPos=20;
    GUIwidth=80;
    GUIheight=30;
    
    GUIwindow=figure('Units','characters',...
        'Position',[GUIxPos GUIyPos GUIwidth GUIheight], ...
        'Tag','TiggerTable_GUI', ...
        'Name','TiggerTable',...
        'MenuBar','none',...
        'NumberTitle','off',...
        'resize','off');
    
    centralPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 MESSAGEBAR_PANEL_HEIGHT ...
        GUIwidth (GUIheight-MESSAGEBAR_PANEL_HEIGHT)],...
        'Tag','TiggerTable_centralPanel',...
        'BackgroundColor', [0.8 0.8 0.8]);
    
    messageBarPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 0 ...
        GUIwidth MESSAGEBAR_PANEL_HEIGHT],...
        'Tag','TiggerTable_messageBarPanel');
    
    
    uicontrol('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[3 27 20 LABEL_HEIGHT],...
        'Style','text',...
        'String','# new Trigger IDs:',...
        'Tag','TriggerTable_newTrigIDtxt',...
        'Enable','on');
    uicontrol('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[25 27 5 LABEL_HEIGHT],...
        'Style','edit',...
        'String','1',...
        'Tag','TriggerTable_newTrigIDedit',...
        'Enable','on',...
        'Callback',@changeTable);
    
    uicontrol('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[35 27 15 LABEL_HEIGHT],...
        'Style','text',...
        'String','# new Trigger:',...
        'Tag','TriggerTable_newTrigtxt',...
        'Enable','on');
    uicontrol('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[52 27 5 LABEL_HEIGHT],...
        'Style','edit',...
        'String','10',...
        'Tag','TriggerTable_newTrigedit',...
        'Enable','on',...
        'Callback',@changeTable);
    
    
    dat = repmat(NaN,10,1);
    cnames = {'1. new Trigger [s]'};
    uitable('Parent',centralPanel,...
        'Data',dat,...
        'ColumnName',cnames,...
        'Tag','createTriggerTable',...
        'Position',[10 20 310 300],...
        'ColumnEditable',logical(ones(1,10)));
    
    % message bar
    messageBarPanelPos=get(messageBarPanel,'Position');
    uicontrol('Parent',messageBarPanel,...
        'Units','characters',...
        'Position',[(messageBarPanelPos(1)+MESSAGEBAR_LEFT_OFFSET) ...
        (messageBarPanelPos(2)) ...
        (messageBarPanelPos(3)-MESSAGEBAR_RIGHT_OFFSET) ...
        LABEL_HEIGHT],...
        'Tag','TiggerTable_messageBarText',...
        'Enable','on',...
        'String','',...
        'HorizontalAlignment','left',...
        'Style','text');
    
    % button to run the tool
    uicontrol('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[65 27 12 BUTTON_HEIGHT*1.5],...
        'Style','pushbutton',...
        'String','Store',...
        'Tag','TriggerTable_Pushbutton',...
        'Enable','on',...
        'Callback',@storeNewTrigger);
    %-% use {@myCallback,arg1,arg2,...} to have args
    
    
catch
    % if error occurs here, the window is closed, the error is rethrown
    % and then catched by the main window
    close(findobj('tag', 'TiggerTable'));
    rethrow(lasterror);
end


function changeTable(source,event)

tabh=findobj('Tag','createTriggerTable');

numTrigID=ceil(str2num(get(findobj('Tag','TriggerTable_newTrigIDedit'),'String')));
numTrig=ceil(str2num(get(findobj('Tag','TriggerTable_newTrigedit'),'String')));

dat = zeros(numTrig,numTrigID);
cnames={};
for ll=1:numTrigID
    cnames{ll} = strcat(num2str(ll),'. new Trigger [s]');
end

set(tabh,'Data',dat,'ColumnName',cnames,...
    'Tag','createTriggerTable','ColumnEditable',true(1,numTrig*numTrigID));

function storeNewTrigger(source,event)

temd=get(findobj('Tag','createTriggerTable'),'Data');
if any(isnan(temd))
    warning('NaNs will be removed from Data');
    for kk=1:size(temd,2)
        if ~isempty(temd(~isnan(temd(:,kk))))
            newdata.Event.TimeStamp{kk}=temd(~isnan(temd(:,kk)));
        else
            continue;
        end
    end
    if exist('newdata','var')
        store_ns_neweventdata('newdata',newdata,'DataOrigin','manually set triggers');
    else
        postMessage('Please set triggers before storring');
        return;
    end
else
    newdata.Event.TimeStamp=mat2cell(temd,[size(temd,1)],ones(1,size(temd,2)));
    tmpstr=cell(1,size(temd,2));
    for pp=1:size(temd,2)
        tmpstr{pp}='manually set triggers';
    end
    store_ns_neweventdata('newdata',newdata,'DataOrigin',tmpstr);
end
postMessage('...done!');
