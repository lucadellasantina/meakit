function DataExport_GUI(varargin)
% function DataExportGUI
%
% creates GUI to select Data format and exporting modus
%
% kilias 06/08
%
% This function belongs to FIND_GUI Toolbox project
% http://find.bccn.uni-freiburg.de

global nsFile; %-% if needed.

global BUTTON_HEIGHT;
global LABEL_HEIGHT;
global MESSAGEBAR_PANEL_HEIGHT;
global MESSAGEBAR_LEFT_OFFSET;
global MESSAGEBAR_RIGHT_OFFSET;

obligatoryArgs={}; %-% e.g. {'x','y'}

% optional arguments names with default values
optionalArgs={{'selected_Export', @(val) ismember(val,{'HDF5','GDF','STA','MAT'})}};

errorMessage=checkPVP(varargin,obligatoryArgs,optionalArgs);
if ~isempty(errorMessage)
    error(errorMessage,'missing or wrong input arguments');
end
% set defaults
selected_Export='HDF5';

% loading parameter value pairs into workspace, overwriting defaul values
pvpmod(varargin);

try
    
    % Check if the DataExportGUI is already open
    if ishandle(findobj('tag', 'DataExportGUI'))
        close(findobj('tag', 'DataExportGUI'));
    end;
    
    % GUI window
    %-% Values are suggestions for small window
    GUIxPos=20;
    GUIyPos=20;
    GUIwidth=70;
    GUIheight=20;
    if strcmp(selected_Export,'GDF')
        GUIwidth=120;
    end
    
    GUIwindow=figure('Units','characters',...
        'Position',[GUIxPos GUIyPos GUIwidth GUIheight], ...
        'Tag','DataExportGUI', ...
        'Name','Data Export GUI',...
        'MenuBar','none',...
        'NumberTitle','off',...
        'resize','off');
    
    % panels
    centralPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 MESSAGEBAR_PANEL_HEIGHT ...
        GUIwidth (GUIheight*(2/3))],...
        'Tag','DataExportGUI_centralPanel',...
        'BackgroundColor', [0.8 0.8 0.8]);
    
    upperPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 (MESSAGEBAR_PANEL_HEIGHT+GUIheight*(2/3)) ...
        GUIwidth (GUIheight-GUIheight*(2/3))],...
        'Tag','DataExportGUI_centralPanel',...
        'BackgroundColor', [0.8 0.8 0.8]);
    
    messageBarPanel=uipanel('Parent',GUIwindow,...
        'Units','characters',...
        'Position',[0 0 ...
        GUIwidth MESSAGEBAR_PANEL_HEIGHT],...
        'Tag','DataExportGUI_messageBarPanel');
    
    % message bar
    messageBarPanelPos=get(messageBarPanel,'Position');
    uicontrol('Parent',messageBarPanel,...
        'Units','characters',...
        'Position',[(messageBarPanelPos(1)+MESSAGEBAR_LEFT_OFFSET) ...
        (messageBarPanelPos(2)) ...
        (messageBarPanelPos(3)-MESSAGEBAR_RIGHT_OFFSET) ...
        LABEL_HEIGHT],...
        'Tag','DataExportGUI_messageBarText',...
        'Enable','on',...
        'String','',...
        'HorizontalAlignment','left',...
        'Style','text');
    
    %         % text label
    %     filename_texthandle=uicontrol('Parent',centralPanel,...
    %         'Units','characters',...
    %         'Position',[15    15    35    LABEL_HEIGHT],...
    %         'Style','text',...
    %         'String','File Type Selection ',...
    %         'Tag','headline',...
    %         'Enable','on');
    
    
    %%%% file type Selection Radio Group
    
    radioGroup = uibuttongroup('visible','off'...
        ,'Units','characters',...
        'Position',[4 1.5 GUIwidth*(7/8) BUTTON_HEIGHT*2],...
        'Parent',upperPanel,...
        'Tag','fileTypeSelectionGUI_radioGroup',...
        'Title','File Type');
    
    radioButton1 = uicontrol('Style','Radio',...
        'String','HDF5',...
        'Units','characters',...
        'pos',[1 .2 15 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','fileTypeSelectionGUI_radioButton1');
    
    radioButton2 = uicontrol('Style','Radio',...
        'String','GDF',...
        'Units','characters',...
        'pos',[15 .2 15 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','fileTypeSelectionGUI_radioButton2');
    
    radioButton3 = uicontrol('Style','Radio',...
        'String','STA',...
        'Units','characters',...
        'pos',[30 .2 15 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','fileTypeSelectionGUI_radioButton3');
    
    radioButton4 = uicontrol('Style','Radio',...
        'String','MAT',...
        'Units','characters',...
        'pos',[45 .2 15 BUTTON_HEIGHT],...
        'parent',radioGroup,...
        'HandleVisibility','off',...
        'Tag','fileTypeSelectionGUI_radioButton4');
    
    
    set(radioGroup,'SelectionChangeFcn',@fileType_callback);
    set(radioGroup,'Visible','on');
    
    switch selected_Export
        
        % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        % %%%%%%%%%%%%% exportToHDF5 %%%%%%%%%%%%%%%%%%%%%%%%
        
        case 'HDF5' % exportToHDF5
            
            set(radioGroup,'SelectedObject',[radioButton1]);  % Select one Default
            set(radioGroup,'UserData','HDF5'); % also set the userdata default
            
            uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[20 3 25 BUTTON_HEIGHT],...
                'Style','pushbutton',...
                'String','Export',...
                'Tag','FIND_GUI_exportHDF5_GUIpushbutton',...
                'Enable','on',...
                'Callback',@exportToHDF5_GUIpushbuttonCallback);
            
            FileNameEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[8  8.4 40 LABEL_HEIGHT],...
                'Style','edit',...
                'String','default.hdf5',...
                'Tag','Specify_ExportPath',...
                'Enable','on');
            % text label
            filename_texthandle=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[8   10    40    LABEL_HEIGHT],...
                'Style','text',...
                'String','Export Path / Filename ',...
                'Tag','dumbtxt',...
                'Enable','on');
            
            
            recNameEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[30  6 18 LABEL_HEIGHT],...
                'Style','edit',...
                'String','nsFile',...
                'Tag','recordName_Edit',...
                'Enable','on');
            % text label
            recName_texthandle=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[8   6   18    LABEL_HEIGHT],...
                'Style','text',...
                'String','record Name:',...
                'Tag','dumbtxt2',...
                'Enable','on');
            
            
            % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % %%%%%%%%%%%%% exportToGDF %%%%%%%%%%%%%%%%%%%%%%%%
            
        case 'GDF' %exportToGDF
            
            set(radioGroup,'SelectedObject',[radioButton2]);  % Select one Default
            set(radioGroup,'UserData','GDF'); % also set the userdata default
            
            % button to run the tool
            toolButton=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[20 1 26 BUTTON_HEIGHT],...
                'Style','pushbutton',...
                'String','Export',... % e.g. 'go!'
                'Tag','exportGDF_GUI_exportGDFPushButton',...
                'Enable','on',...
                'Callback',@exportGDFpushbuttoncallback);
            
            %%%%% rest of GUI -> collect the variables
            NeuralEventsValueEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[3  7 32 LABEL_HEIGHT*2],...
                'Style','edit',...
                'String','[ ]',...
                               'Tag','Select_NeuralEvents',...
                'Enable','on');
            % text label
            tmp_texthandle=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[3  9.4 32 LABEL_HEIGHT*3],...
                'Style','text',...
                  'BackgroundColor',[0.8 0.8 0.8],...
                'String',{'select data: ';'1st column  = Entity ID' ;'2nd column = UnitID'},...
                'Tag','dumbtxt',...
                'Enable','on');
            
            TriggerEventsValueEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[37    10.2    26    LABEL_HEIGHT],...
                'Style','edit',...
                'String','[ ]',...
                'Tag','Select_TriggerEvents',...
                'Enable','on');
            % text label
            tmp_texthandle=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[37  11.5 26 LABEL_HEIGHT],...
                'Style','text',...
                  'BackgroundColor',[0.8 0.8 0.8],...
                'String','select Trigger - Entity ID ',...
                'Tag','dumbtxt',...
                'Enable','on');
            
%             FileNameValueEdit=uicontrol('Parent',centralPanel,...
%                 'Units','characters',...
%                 'Position',[3  8.5 26 LABEL_HEIGHT],...
%                 'Style','edit',...
%                 'String','[ ]',...
%                 'Tag','exportGDF_SelectUnitID',...
%                 'Enable','on');
            % text label
%             tmp_texthandle=uicontrol('Parent',centralPanel,...
%                 'Units','characters',...
%                 'Position',[3    7.2   26    LABEL_HEIGHT],...
%                 'Style','text',...
%                 'String','optional Unit ID',...
%                 'Tag','exportGDF_SelectUnitIDtxt',...
%                 'Enable','on');
            
            FileNameValueEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[3    3.5   60    LABEL_HEIGHT],...
                'Style','edit',...
                'String','default.gdf',...
                'Tag','Specify_ExportPath',...
                'Enable','on');
            % text label
            tmp_texthandle=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[3  4.8 60 LABEL_HEIGHT],...
                'Style','text',...
                  'BackgroundColor',[0.8 0.8 0.8],...
                'String','Export Path / Filename ',...
                'Tag','dumbtxt',...
                'Enable','on');
            
            
            %%%% generate the List of Neurons that can be exported!
            txt_field='available Neurons:';
            try
                for iii=1:length(nsFile.Neural.EntityID)
                    txt_field=strvcat(txt_field,['Neuron ID ' num2str(nsFile.Neural.EntityID(iii))...
                        ' --> '  char(nsFile.Neural.Info(iii).Label)]);
                end
            catch
                postMessage('No Neurons found');
            end
            
            %%% generate a list of Events that can be exported!
            txt_events='available Events:';
            try
                for iii=1:length(nsFile.Neural.EntityID)
                    txt_events=strvcat(txt_events,['Event ID ' num2str(nsFile.Event.EntityID(iii))...
                        ' --> '  char( nsFile.Event.Info(iii).EntityLabel)]);
                end
            catch
                postMessage('No Events found');
            end
            
            %%% Available Neurons and their IDs
            NeuronsAvailableValueEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[67  1 50 10*LABEL_HEIGHT],...
                'Style','listbox',...
                'String',strvcat(txt_field,txt_events),...
                'Tag','NeuronsAvailableListbox',...
                'Enable','on');
            
            % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % %%%%%%%%%%%%% exportToSTA %%%%%%%%%%%%%%%%%%%%%%%%
            
        case 'STA' %exportToSTA
            
            set(radioGroup,'SelectedObject',[radioButton3]);  % Select one Default
            set(radioGroup,'UserData','STA'); % also set the userdata default
            
            % button to run the tool
            toolButton=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[15 10 30 BUTTON_HEIGHT],...
                'Style','pushbutton',...
                'String','export to file',...
                'Tag','exportSTA_GUI_exportSTApushbutton',...
                'Enable','on',...
                'Callback',@exportSTApushbuttonCallback);
            
        case 'MAT' %exportToMAT
            
            set(radioGroup,'SelectedObject',[radioButton4]);  % Select one Default
            set(radioGroup,'UserData','MAT'); % also set the userdata default
            
            %             FileNameEdit=uicontrol('Parent',centralPanel,...
            %                 'Units','characters',...
            %                 'Position',[40  10 20 LABEL_HEIGHT],...
            %                 'Style','edit',...
            %                 'String','default.mat',...
            %                 'Tag','Specify_ExportPath',...
            %                 'Enable','on');
            %             % text label
            %             filename_texthandle=uicontrol('Parent',centralPanel,...
            %                 'Units','characters',...
            %                 'Position',[8   10    30    LABEL_HEIGHT],...
            %                 'Style','text',...
            %                 'String','Export Path / Filename : ',...
            %                 'Tag','Specify_ExportPath_txt',...
            %                 'Enable','on');
            %
            recNameEdit=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[40  8.4 20 LABEL_HEIGHT],...
                'Style','edit',...
                'String','all',...
                'Tag','exportID_Edit',...
                'Enable','off');
            % text label
            recName_texthandle=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[8   8.4   30    LABEL_HEIGHT],...
                'Style','text',...
                'String','loaded IDs to export:',...
                'Tag','exportID_txt',...
                'Enable','off');
            
            % button to run the tool
            toolButton=uicontrol('Parent',centralPanel,...
                'Units','characters',...
                'Position',[20 3 25 BUTTON_HEIGHT],...
                'Style','pushbutton',...
                'String','Export',...
                'Tag','exportMAT_GUI_exportMATpushbutton',...
                'Enable','on',...
                'Callback',@exportMATpushbuttonCallback);
            
            
        otherwise %ERROR
            error(['Unknown file type -> Check the parameters: ']);
    end
    
    
    %-% rest of GUI below...
    
    
catch
    % if error occurs here, the window is closed, the error is rethrown
    % and then catched by the main window
    close(findobj('tag', 'DataExportGUI'));
    rethrow(lasterror);
end


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% %%%%%%%%%%%%% Functions %%%%%%%%%%%%%%%%%%%%%%%%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function fileType_callback(source,eventdata)

% Get the Value from the Radio Button-Group
temp=get(get(source,'SelectedObject'),'String');
tmp=findobj('Tag','fileTypeSelectionGUI_radioGroup');
set(tmp,'UserData',temp);
selected_Export = get(tmp(1),'UserData');
DataExport_GUI('selected_Export',selected_Export);
disp([selected_Export, ' selected ']);


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function exportToHDF5_GUIpushbuttonCallback(source,event)
% source and event args are generated by default
global nsFile;
try
    postMessage(''); % Clean up prior messages.
    
    % grab the variables
    filename=get(findobj('Tag','Specify_ExportPath'),'String');
    recordName=get(findobj('Tag','recordName_Edit'),'String');
    
    if exist(filename)==2;
        existingFile=questdlg('There is a file with an identical name on your MATLAB searchpath.',...
            'Do you want to overwrite it?', ...
            'overwrite','cancel','cancel');
        switch existingFile
            case 'overwrite'
                delete(filename);
            case 'cancel'
                return;
        end
    end
    postMessage('... exporting');
    
    % grap all needed infos if not already present
    for kk=1:length(nsFile.Event.EntityID)
        posEntityID(kk)=find([nsFile.EntityInfo(:).EntityID]==nsFile.Event.EntityID(kk));
        if size(nsFile.Event.Info,2)<kk
            reportEmpty=ones(7,1);
        else
            reportEmpty=(structfun(@isempty,nsFile.Event.Info(kk)));
        end
        if sum(reportEmpty)>0
            nsFile.Event.Info(kk).EventType=1;
            nsFile.Event.Info(kk).MinDataLength=size(nsFile.Event.TimeStamp,1);
            nsFile.Event.Info(kk).MaxDataLength=size(nsFile.Event.TimeStamp,1);
            nsFile.Event.Info(kk).CSVDesc='not specified';
            nsFile.Event.Info(kk).EntityID=nsFile.EntityInfo(posEntityID(kk)).EntityID;
            nsFile.Event.Info(kk).ItemCount=nsFile.EntityInfo(posEntityID(kk)).ItemCount;
            nsFile.Event.Info(kk).EntityLabel=nsFile.EntityInfo(posEntityID(kk)).EntityLabel;
        end
    end
    
    % open file and call export function
    fid=fopen(filename,'w+');
    exportToHDF('filename', filename,'recordName',recordName);
    fclose(fid);
    
    postMessage('...done');
catch
    handleError(lasterror);
end


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function exportSTApushbuttonCallback(source,event)
% Run tool button callback; starts exportSTA.
% Source and event args are generated by default.
global nsFile; %-% if needed
try
    [STAMfileName, pathName] = uiputfile( ...
        {'*.stam', 'STA metadata file (*.stam)'}, ...
        'Choose filename');
    % redraw figure before going busy, otherwise 'smeared out'
    % by file dialog
    refresh;
    postMessage('Busy - please wait...');
    exportSTA('STAMfileName',fullfile(pathName, STAMfileName));
    postMessage('...done.');
catch
    handleError(lasterror);
end


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% run tool button callback; starts the tool function of this subwindow
function exportGDFpushbuttoncallback(source,event)
% source and event args are generated by default
try
    global nsFile; % if needed
    
    % posting 'busy' message
    postMessage('Busy - please wait...');
    
    % grab the variables
    outFile=get(findobj('Tag','Specify_ExportPath'),'String');
    neuronID=eval(get(findobj('Tag','Select_NeuralEvents'),'String'));
    eventID=eval(get(findobj('Tag','Select_TriggerEvents'),'String'));
%     UnitID=eval(get(findobj('Tag','exportGDF_SelectUnitID'),'String'));
    
    % some checks
    if ~any(sort(nsFile.Event.EntityID)==sort(eventID))
        postMessage('Not all event Entities present in nsFile');
        return;
    elseif ~any(sort(nsFile.Neural.EntityID)==sort(neuronID(:,1)')) && ...
            ~any(sort(nsFile.Segment.DataentityIDs)==sort(neuronID(:,1)'))
        postMessage('Not all neural/segment Entities present in nsFile');
        return;
%     elseif ~isempty(UnitID) && ~all(cellfun(@(x,y) any(ismember(unique(x),y),nsFile.Segment.UnitID,{UnitID})));
%         postMessage('Not all Segment UnitIDs present in nsFile');
%         return;
    elseif isempty(neuronID(:,2)) && all(sort(nsFile.Segment.DataentityIDs)==sort(neuronID(:,1)')) && ...
            ~all(cellfun(@(x) all(x==0),nsFile.Segment.UnitID))
         postMessage('Please specify UnitID!');
        return;
    end
    
    txt_array=exportGDF('neuronID',neuronID,'eventID',eventID,'outputFile',outFile);
    
    tmp=findobj('Tag','NeuronsAvailableListbox');
    txt_present=get(tmp,'String');
    set(tmp,'String',strvcat(txt_array,txt_present));
    
    
    postMessage('...done.');
catch
    handleError(lasterror);
end

% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% run tool button callback; starts the tool function of this subwindow
function exportMATpushbuttonCallback(source,event)
% source and event args are generated by default
try
    global nsFile; % if needed
    
    % posting 'busy' message
    postMessage('Busy - please wait...');
    %     selectmp=get(findobj('Tag','exportID_Edit'),'String');
    %     if strcmp(selectmp,'all')
    %        selectedID=[nsFile.Analog.DataentityIDs,nsFile.Segment.DataentityIDs,nsFile.Event.EntityID,nsFile.Neural.EntityID];
    %     else
    %         selectedID=eval(selectmp);
    %     end
    
    [MATfileName, pathName] = uiputfile( ...
        {'*.mat','*.mat (containing an exported nsFile)'}, ...
        'Choose filename');
    
    stdExportMAT('outputFile',fullfile(pathName, MATfileName));
    postMessage('...done.');
catch
    handleError(lasterror);
end